// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// clipMeshEK
Rcpp::List clipMeshEK(const Rcpp::List rmesh, const Rcpp::List rclipper, const bool clipVolume, const bool triangulate1, const bool triangulate2, const bool normals);
RcppExport SEXP _MeshesTools_clipMeshEK(SEXP rmeshSEXP, SEXP rclipperSEXP, SEXP clipVolumeSEXP, SEXP triangulate1SEXP, SEXP triangulate2SEXP, SEXP normalsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::List >::type rmesh(rmeshSEXP);
    Rcpp::traits::input_parameter< const Rcpp::List >::type rclipper(rclipperSEXP);
    Rcpp::traits::input_parameter< const bool >::type clipVolume(clipVolumeSEXP);
    Rcpp::traits::input_parameter< const bool >::type triangulate1(triangulate1SEXP);
    Rcpp::traits::input_parameter< const bool >::type triangulate2(triangulate2SEXP);
    Rcpp::traits::input_parameter< const bool >::type normals(normalsSEXP);
    rcpp_result_gen = Rcpp::wrap(clipMeshEK(rmesh, rclipper, clipVolume, triangulate1, triangulate2, normals));
    return rcpp_result_gen;
END_RCPP
}
// convexDecomposition
Rcpp::List convexDecomposition(Rcpp::List rmesh, const bool triangulate_in, const bool triangulate_out);
RcppExport SEXP _MeshesTools_convexDecomposition(SEXP rmeshSEXP, SEXP triangulate_inSEXP, SEXP triangulate_outSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type rmesh(rmeshSEXP);
    Rcpp::traits::input_parameter< const bool >::type triangulate_in(triangulate_inSEXP);
    Rcpp::traits::input_parameter< const bool >::type triangulate_out(triangulate_outSEXP);
    rcpp_result_gen = Rcpp::wrap(convexDecomposition(rmesh, triangulate_in, triangulate_out));
    return rcpp_result_gen;
END_RCPP
}
// distanceEK
Rcpp::NumericVector distanceEK(const Rcpp::List rmesh, const Rcpp::NumericMatrix points, const bool triangulate);
RcppExport SEXP _MeshesTools_distanceEK(SEXP rmeshSEXP, SEXP pointsSEXP, SEXP triangulateSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::List >::type rmesh(rmeshSEXP);
    Rcpp::traits::input_parameter< const Rcpp::NumericMatrix >::type points(pointsSEXP);
    Rcpp::traits::input_parameter< const bool >::type triangulate(triangulateSEXP);
    rcpp_result_gen = Rcpp::wrap(distanceEK(rmesh, points, triangulate));
    return rcpp_result_gen;
END_RCPP
}
// meshVolumeEK
double meshVolumeEK(const Rcpp::List rmesh, const bool triangulate);
RcppExport SEXP _MeshesTools_meshVolumeEK(SEXP rmeshSEXP, SEXP triangulateSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::List >::type rmesh(rmeshSEXP);
    Rcpp::traits::input_parameter< const bool >::type triangulate(triangulateSEXP);
    rcpp_result_gen = Rcpp::wrap(meshVolumeEK(rmesh, triangulate));
    return rcpp_result_gen;
END_RCPP
}
// meshAreaEK
double meshAreaEK(const Rcpp::List rmesh, const bool triangulate);
RcppExport SEXP _MeshesTools_meshAreaEK(SEXP rmeshSEXP, SEXP triangulateSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::List >::type rmesh(rmeshSEXP);
    Rcpp::traits::input_parameter< const bool >::type triangulate(triangulateSEXP);
    rcpp_result_gen = Rcpp::wrap(meshAreaEK(rmesh, triangulate));
    return rcpp_result_gen;
END_RCPP
}
// meshCentroidEK
Rcpp::NumericVector meshCentroidEK(const Rcpp::List rmesh, const bool triangulate);
RcppExport SEXP _MeshesTools_meshCentroidEK(SEXP rmeshSEXP, SEXP triangulateSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::List >::type rmesh(rmeshSEXP);
    Rcpp::traits::input_parameter< const bool >::type triangulate(triangulateSEXP);
    rcpp_result_gen = Rcpp::wrap(meshCentroidEK(rmesh, triangulate));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_MeshesTools_clipMeshEK", (DL_FUNC) &_MeshesTools_clipMeshEK, 6},
    {"_MeshesTools_convexDecomposition", (DL_FUNC) &_MeshesTools_convexDecomposition, 3},
    {"_MeshesTools_distanceEK", (DL_FUNC) &_MeshesTools_distanceEK, 3},
    {"_MeshesTools_meshVolumeEK", (DL_FUNC) &_MeshesTools_meshVolumeEK, 2},
    {"_MeshesTools_meshAreaEK", (DL_FUNC) &_MeshesTools_meshAreaEK, 2},
    {"_MeshesTools_meshCentroidEK", (DL_FUNC) &_MeshesTools_meshCentroidEK, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_MeshesTools(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
